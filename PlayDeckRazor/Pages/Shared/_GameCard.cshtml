@using PlayDeckRazor.Model
@model IndexModel

@* Displays a card representing a game entry *@

@{
    if (ViewData["GameCard"] is Game g)
    {
        <li x-data="{title: `@g.Title`}" x-show="title.toLowerCase().trim().includes(search.toLowerCase().trim()) && expanded" id="game-card-@g.ID" targetDeckDisplay="@g.DeckID">
            
            <div class="game-card card">
                <a asp-page="/GameView" asp-route-id="@g.ID">
                    @{
                        @* Dynamically form image alt text *@
                        string s = g.Title + " video-game cover";

                        if (string.IsNullOrEmpty(g.ImageURL))
                        {
                            <div class="placeholder-container">
                                <img class="card-img-top" src="/Resources/Cover Placeholder.png" alt="@s">
                                <p class="placeholder-text">@g.Title</p>
                            </div>
                        }
                        else
                        {
                            <img class="card-img-top" src="@g.ImageURL" alt="@s" loading="lazy">
                        }
                    }
                </a>
                <a class="delete-game-container" title="Delete" data-bs-toggle="modal" data-bs-target="#delete-modal" x-on:click="setInfo(@g.ID, `@g.Title`); mode = 'delete'" >
                    <div class="delete-game-button d-inline-flex justify-content-center">
                        <p style="margin: 0">X</p>
                    </div>
                </a>
                <a data-bs-toggle="modal" data-bs-target="#delete-modal" class="edit-game-container" title="Edit" x-on:click="GetGameDetails(@g.ID); mode = 'edit'">
                    <div class="edit-game-button d-inline-flex justify-content-center">
                        <p class="bi bi-pencil" style="margin: 0"></p>
                    </div>
                </a>
                <div class="rating-display-container d-flex flex-column">
                    <div style="margin-left: auto; margin-right: auto">
                        @{
                            if (g.Favourite) @* If game is favourite display filled heart *@
                            {
                                <span class="bi bi-heart-fill heart-checked"></span>
                            }
                            else
                            {
                                <span class="bi bi-heart heart-unchecked"></span>
                            }
                        }
                    </div>
                    <div style="margin-left: auto; margin-right: auto">
                        @{
                            if (g.PlayStatus == 1) @* If game is complete display filled trophy *@
                            {
                                <span class="bi bi-trophy-fill trophy-checked"></span>
                            }
                            else
                            {
                                <span class="bi bi-trophy trophy-unchecked"></span>
                            }
                        }
                    </div>
                    <div class="d-flex" style="gap: 0.1vw;">
                        <span style="margin-top: 1px">@g.Rating</span>
                        <span class="bi bi-star-fill checked"></span>
                    </div>
                </div>
            </div>
        </li> 
    }
}
