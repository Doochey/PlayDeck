@page
@using PlayDeckRazor.Pages.Shared
@using PlayDeckRazor.Model
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IndexModel
@{
    ViewData["Title"] = "Home";
}

<div x-data="$store.gameData">
    <div class="modal fade" id="delete-modal" tabindex="-1" role="dialog" aria-labelledby="delete-modal-title" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <template x-if="mode === 'delete'">
                        <h2 class="modal-title" id="delete-modal-title">Warning!</h2>
                    </template>
                    <template x-if="mode === 'edit'">
                        <h2 class="modal-title" id="delete-modal-title">Edit <span x-text="gameTitle"></span></h2>
                    </template>
                    <template x-if="mode === 'add'">
                        <h2 class="modal-title" id="delete-modal-title">Add a new game</h2>
                    </template>
                </div>
                <div class="modal-body">
                    <template x-if="mode === 'delete'">
                        <p>
                            Are you sure you want to remove <span style="color: #eb4155; font-weight: bold" x-text="gameTitle"></span> from your collection? If you want to change which deck
                            the game belongs to, use the edit button.
                        </p>
                    </template>
                    <template x-if="mode === 'edit'">
                        @{
                            await Html.RenderPartialAsync("_ModalGameDetails", new _ModalGameDetailsModel(Model._context));
                        }
                    </template>
                    <template x-if="mode === 'add'">
                        @{
                            await Html.RenderPartialAsync("_ModalGameDetails", new _ModalGameDetailsModel(Model._context));
                        }
                    </template>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" title="Cancel">Cancel</button>
                    <template x-if="mode === 'delete'">
                        <form x-on:submit.prevent="SendDelete()" method="post" id="delete-modal-form" asp-page-handler="delete">
                            <input type="hidden" asp-for="GameDeleteId" x-model="gameId"/>
                            <input x-on:submit.prevent="{}" type="submit" value="I'm Sure" class="btn btn-danger" title="Delete game" data-bs-toggle="modal" data-bs-target="#delete-modal"/>
                        </form>
                    </template>
                    <template x-if="mode === 'edit'">
                        <form x-on:submit.prevent="SendEdit(gameId)" method="post" id="edit-modal-button-form" asp-page-handler="edit">
                            <input x-on:submit.prevent="{}" type="submit" value="Save" class="btn btn-primary submit-button" style="margin-left: auto" title="Save changes" data-bs-toggle="modal" data-bs-target="#delete-modal"/>
                        </form>
                    </template>
                    <template x-if="mode === 'add'">
                        <form x-on:submit.prevent="SendDelete()" method="post" id="add-modal-form" asp-page-handler="add">
                            <input x-on:submit.prevent="{}" type="submit" value="I'm Sure" class="btn btn-danger" title="Delete game" data-bs-toggle="modal" data-bs-target="#delete-modal"/>
                        </form>
                    </template>
                </div>
            </div>
        </div>
    </div>
    
    @* These decks will always be displayed first *@
    <div id="default-decks-container" class="d-flex flex-column justify-content-center">
        @{
            @* Deck ID 1 = Currently Playing (On Deck) *@
            ViewData["Deck"] = Model.Decks[1];
            await Html.RenderPartialAsync("_DeckDisplay", Model);
        }
        @{
            @* Deck ID 2 = Complete *@
            ViewData["Deck"] = Model.Decks[2];
            await Html.RenderPartialAsync("_DeckDisplay", Model);
        }
        @{
            @* Deck ID 3 = Wishlist *@
            ViewData["Deck"] = Model.Decks[3];
            await Html.RenderPartialAsync("_DeckDisplay", Model);
        }
    </div>
    
    @* Space for custom decks *@
    
    @{
        @* Deck ID 0 = Collection / Unassigned *@
        ViewData["Deck"] = Model.Decks[0];
        await Html.RenderPartialAsync("_DeckDisplay", Model);
    }
    
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="liveToast" class="toast bg-dark bg-gradient" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-transparent text-white">
                <img src="favicon.ico" class="rounded me-2" alt="...">
                <strong class="me-auto" id="toast-operation">Deleted</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body bg-transparent text-white">
                <span style="color: #eb4155; font-weight: bold" x-text="gameTitle"></span> <span id="toast-operation-text">was removed from the database.</span>
            </div>
        </div>
    </div>
</div>


